// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: editor_proto_files/PlayBoardEdit.proto
#ifndef GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED
#define GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED

#include "editor_proto_files/PlayBoardEdit.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace EditorGRPC {

class PlayBoardEdit final {
 public:
  static constexpr char const* service_full_name() {
    return "EditorGRPC.PlayBoardEdit";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> AsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(AsyncAddBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> PrepareAsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(PrepareAsyncAddBlockRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> AsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(AsyncRemoveBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> PrepareAsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(PrepareAsyncRemoveBlockRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::EditorGRPC::EditBlockResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> AsyncChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(AsyncChangeBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> PrepareAsyncChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(PrepareAsyncChangeBlockRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::BoardDescription* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>> AsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>>(AsyncGetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>> PrepareAsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetBoardStateRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::EditorGRPC::SetBoardDescriptionResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>> AsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>>(AsyncSetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>> PrepareAsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>>(PrepareAsyncSetBoardStateRaw(context, request, cq));
    }
    virtual ::grpc::Status InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::EditorGRPC::GameSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>> AsyncInitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>>(AsyncInitialConnectionHandshakeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>> PrepareAsyncInitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>>(PrepareAsyncInitialConnectionHandshakeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::SerializablePropertiesNodes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>> AsyncGetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>>(AsyncGetSerializableNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>> PrepareAsyncGetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>>(PrepareAsyncGetSerializableNodesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::EditorGRPC::SetSerializablePropertyResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>> AsyncSetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>>(AsyncSetSerializablePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>> PrepareAsyncSetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>>(PrepareAsyncSetSerializablePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::EditorGRPC::BoardDescription>> GetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::EditorGRPC::BoardDescription>>(GetUpdatedBoardStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>> AsyncGetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>>(AsyncGetUpdatedBoardStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>> PrepareAsyncGetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetUpdatedBoardStreamRaw(context, request, cq));
    }
    virtual ::grpc::Status SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::EditorGRPC::FileSaveResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>> AsyncSaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>>(AsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>> PrepareAsyncSaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>>(PrepareAsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::EditorGRPC::GameFrameworkLayers>> GetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::EditorGRPC::GameFrameworkLayers>>(GetGameFramworkStackStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>> AsyncGetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>>(AsyncGetGameFramworkStackStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>> PrepareAsyncGetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>>(PrepareAsyncGetGameFramworkStackStreamRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::grpc::ClientReadReactor< ::EditorGRPC::BoardDescription>* reactor) = 0;
      virtual void SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::grpc::ClientReadReactor< ::EditorGRPC::GameFrameworkLayers>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* AsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* PrepareAsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* AsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* PrepareAsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* AsyncChangeBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* PrepareAsyncChangeBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>* AsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>* PrepareAsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>* AsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>* PrepareAsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>* AsyncInitialConnectionHandshakeRaw(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::GameSettings>* PrepareAsyncInitialConnectionHandshakeRaw(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>* AsyncGetSerializableNodesRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SerializablePropertiesNodes>* PrepareAsyncGetSerializableNodesRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>* AsyncSetSerializablePropertyRaw(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetSerializablePropertyResult>* PrepareAsyncSetSerializablePropertyRaw(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::EditorGRPC::BoardDescription>* GetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>* AsyncGetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::BoardDescription>* PrepareAsyncGetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>* AsyncSaveLevelRaw(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::FileSaveResult>* PrepareAsyncSaveLevelRaw(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::EditorGRPC::GameFrameworkLayers>* GetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>* AsyncGetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::EditorGRPC::GameFrameworkLayers>* PrepareAsyncGetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> AsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(AsyncAddBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> PrepareAsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(PrepareAsyncAddBlockRaw(context, request, cq));
    }
    ::grpc::Status RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> AsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(AsyncRemoveBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> PrepareAsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(PrepareAsyncRemoveBlockRaw(context, request, cq));
    }
    ::grpc::Status ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::EditorGRPC::EditBlockResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> AsyncChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(AsyncChangeBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> PrepareAsyncChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(PrepareAsyncChangeBlockRaw(context, request, cq));
    }
    ::grpc::Status GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::BoardDescription* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>> AsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>>(AsyncGetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>> PrepareAsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetBoardStateRaw(context, request, cq));
    }
    ::grpc::Status SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::EditorGRPC::SetBoardDescriptionResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>> AsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>>(AsyncSetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>> PrepareAsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>>(PrepareAsyncSetBoardStateRaw(context, request, cq));
    }
    ::grpc::Status InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::EditorGRPC::GameSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>> AsyncInitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>>(AsyncInitialConnectionHandshakeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>> PrepareAsyncInitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>>(PrepareAsyncInitialConnectionHandshakeRaw(context, request, cq));
    }
    ::grpc::Status GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::SerializablePropertiesNodes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>> AsyncGetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>>(AsyncGetSerializableNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>> PrepareAsyncGetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>>(PrepareAsyncGetSerializableNodesRaw(context, request, cq));
    }
    ::grpc::Status SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::EditorGRPC::SetSerializablePropertyResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>> AsyncSetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>>(AsyncSetSerializablePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>> PrepareAsyncSetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>>(PrepareAsyncSetSerializablePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::EditorGRPC::BoardDescription>> GetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::EditorGRPC::BoardDescription>>(GetUpdatedBoardStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>> AsyncGetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>>(AsyncGetUpdatedBoardStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>> PrepareAsyncGetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetUpdatedBoardStreamRaw(context, request, cq));
    }
    ::grpc::Status SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::EditorGRPC::FileSaveResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>> AsyncSaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>>(AsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>> PrepareAsyncSaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>>(PrepareAsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::EditorGRPC::GameFrameworkLayers>> GetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::EditorGRPC::GameFrameworkLayers>>(GetGameFramworkStackStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>> AsyncGetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>>(AsyncGetGameFramworkStackStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>> PrepareAsyncGetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>>(PrepareAsyncGetGameFramworkStackStreamRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) override;
      void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) override;
      void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) override;
      void ChangeBlock(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, std::function<void(::grpc::Status)>) override;
      void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, std::function<void(::grpc::Status)>) override;
      void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response, std::function<void(::grpc::Status)>) override;
      void InitialConnectionHandshake(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response, std::function<void(::grpc::Status)>) override;
      void GetSerializableNodes(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response, std::function<void(::grpc::Status)>) override;
      void SetSerializableProperty(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUpdatedBoardStream(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::grpc::ClientReadReactor< ::EditorGRPC::BoardDescription>* reactor) override;
      void SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response, std::function<void(::grpc::Status)>) override;
      void SaveLevel(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGameFramworkStackStream(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::grpc::ClientReadReactor< ::EditorGRPC::GameFrameworkLayers>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* AsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* PrepareAsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* AsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* PrepareAsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* AsyncChangeBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* PrepareAsyncChangeBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::BlockEdit& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>* AsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>* PrepareAsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>* AsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>* PrepareAsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>* AsyncInitialConnectionHandshakeRaw(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::GameSettings>* PrepareAsyncInitialConnectionHandshakeRaw(::grpc::ClientContext* context, const ::EditorGRPC::ClientInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>* AsyncGetSerializableNodesRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SerializablePropertiesNodes>* PrepareAsyncGetSerializableNodesRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>* AsyncSetSerializablePropertyRaw(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetSerializablePropertyResult>* PrepareAsyncSetSerializablePropertyRaw(::grpc::ClientContext* context, const ::EditorGRPC::SetSerializablePropertyData& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::EditorGRPC::BoardDescription>* GetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) override;
    ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>* AsyncGetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::EditorGRPC::BoardDescription>* PrepareAsyncGetUpdatedBoardStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>* AsyncSaveLevelRaw(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::FileSaveResult>* PrepareAsyncSaveLevelRaw(::grpc::ClientContext* context, const ::EditorGRPC::FileSavePath& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::EditorGRPC::GameFrameworkLayers>* GetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request) override;
    ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>* AsyncGetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::EditorGRPC::GameFrameworkLayers>* PrepareAsyncGetGameFramworkStackStreamRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangeBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBoardState_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoardState_;
    const ::grpc::internal::RpcMethod rpcmethod_InitialConnectionHandshake_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSerializableNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSerializableProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUpdatedBoardStream_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveLevel_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGameFramworkStackStream_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddBlock(::grpc::ServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response);
    virtual ::grpc::Status RemoveBlock(::grpc::ServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response);
    virtual ::grpc::Status ChangeBlock(::grpc::ServerContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response);
    virtual ::grpc::Status GetBoardState(::grpc::ServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response);
    virtual ::grpc::Status SetBoardState(::grpc::ServerContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response);
    virtual ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response);
    virtual ::grpc::Status GetSerializableNodes(::grpc::ServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response);
    virtual ::grpc::Status SetSerializableProperty(::grpc::ServerContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response);
    virtual ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* context, const ::EditorGRPC::Void* request, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* writer);
    virtual ::grpc::Status SaveLevel(::grpc::ServerContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response);
    virtual ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* context, const ::EditorGRPC::Void* request, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddBlock() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBlock(::grpc::ServerContext* context, ::EditorGRPC::Point* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::EditBlockResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBlock(::grpc::ServerContext* context, ::EditorGRPC::Point* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::EditBlockResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeBlock(::grpc::ServerContext* context, ::EditorGRPC::BlockEdit* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::EditBlockResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBoardState() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBoardState(::grpc::ServerContext* context, ::EditorGRPC::Void* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::BoardDescription>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoardState() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardState(::grpc::ServerContext* context, ::EditorGRPC::BoardDescription* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::SetBoardDescriptionResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitialConnectionHandshake(::grpc::ServerContext* context, ::EditorGRPC::ClientInfo* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::GameSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSerializableNodes(::grpc::ServerContext* context, ::EditorGRPC::Void* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::SerializablePropertiesNodes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSerializableProperty(::grpc::ServerContext* context, ::EditorGRPC::SetSerializablePropertyData* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::SetSerializablePropertyResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUpdatedBoardStream(::grpc::ServerContext* context, ::EditorGRPC::Void* request, ::grpc::ServerAsyncWriter< ::EditorGRPC::BoardDescription>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveLevel() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLevel(::grpc::ServerContext* context, ::EditorGRPC::FileSavePath* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::FileSaveResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGameFramworkStackStream(::grpc::ServerContext* context, ::EditorGRPC::Void* request, ::grpc::ServerAsyncWriter< ::EditorGRPC::GameFrameworkLayers>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddBlock<WithAsyncMethod_RemoveBlock<WithAsyncMethod_ChangeBlock<WithAsyncMethod_GetBoardState<WithAsyncMethod_SetBoardState<WithAsyncMethod_InitialConnectionHandshake<WithAsyncMethod_GetSerializableNodes<WithAsyncMethod_SetSerializableProperty<WithAsyncMethod_GetUpdatedBoardStream<WithAsyncMethod_SaveLevel<WithAsyncMethod_GetGameFramworkStackStream<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddBlock() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response) { return this->AddBlock(context, request, response); }));}
    void SetMessageAllocatorFor_AddBlock(
        ::grpc::MessageAllocator< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response) { return this->RemoveBlock(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveBlock(
        ::grpc::MessageAllocator< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BlockEdit, ::EditorGRPC::EditBlockResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::BlockEdit* request, ::EditorGRPC::EditBlockResult* response) { return this->ChangeBlock(context, request, response); }));}
    void SetMessageAllocatorFor_ChangeBlock(
        ::grpc::MessageAllocator< ::EditorGRPC::BlockEdit, ::EditorGRPC::EditBlockResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BlockEdit, ::EditorGRPC::EditBlockResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBoardState() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response) { return this->GetBoardState(context, request, response); }));}
    void SetMessageAllocatorFor_GetBoardState(
        ::grpc::MessageAllocator< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoardState() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response) { return this->SetBoardState(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoardState(
        ::grpc::MessageAllocator< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::ClientInfo, ::EditorGRPC::GameSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::ClientInfo* request, ::EditorGRPC::GameSettings* response) { return this->InitialConnectionHandshake(context, request, response); }));}
    void SetMessageAllocatorFor_InitialConnectionHandshake(
        ::grpc::MessageAllocator< ::EditorGRPC::ClientInfo, ::EditorGRPC::GameSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::ClientInfo, ::EditorGRPC::GameSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitialConnectionHandshake(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::SerializablePropertiesNodes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::SerializablePropertiesNodes* response) { return this->GetSerializableNodes(context, request, response); }));}
    void SetMessageAllocatorFor_GetSerializableNodes(
        ::grpc::MessageAllocator< ::EditorGRPC::Void, ::EditorGRPC::SerializablePropertiesNodes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::SerializablePropertiesNodes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSerializableNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::SetSerializablePropertyData, ::EditorGRPC::SetSerializablePropertyResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::SetSerializablePropertyData* request, ::EditorGRPC::SetSerializablePropertyResult* response) { return this->SetSerializableProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetSerializableProperty(
        ::grpc::MessageAllocator< ::EditorGRPC::SetSerializablePropertyData, ::EditorGRPC::SetSerializablePropertyResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::SetSerializablePropertyData, ::EditorGRPC::SetSerializablePropertyResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSerializableProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Void* request) { return this->GetUpdatedBoardStream(context, request); }));
    }
    ~WithCallbackMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::EditorGRPC::BoardDescription>* GetUpdatedBoardStream(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SaveLevel() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::FileSavePath, ::EditorGRPC::FileSaveResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::FileSavePath* request, ::EditorGRPC::FileSaveResult* response) { return this->SaveLevel(context, request, response); }));}
    void SetMessageAllocatorFor_SaveLevel(
        ::grpc::MessageAllocator< ::EditorGRPC::FileSavePath, ::EditorGRPC::FileSaveResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::FileSavePath, ::EditorGRPC::FileSaveResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::EditorGRPC::Void, ::EditorGRPC::GameFrameworkLayers>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Void* request) { return this->GetGameFramworkStackStream(context, request); }));
    }
    ~WithCallbackMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::EditorGRPC::GameFrameworkLayers>* GetGameFramworkStackStream(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddBlock<WithCallbackMethod_RemoveBlock<WithCallbackMethod_ChangeBlock<WithCallbackMethod_GetBoardState<WithCallbackMethod_SetBoardState<WithCallbackMethod_InitialConnectionHandshake<WithCallbackMethod_GetSerializableNodes<WithCallbackMethod_SetSerializableProperty<WithCallbackMethod_GetUpdatedBoardStream<WithCallbackMethod_SaveLevel<WithCallbackMethod_GetGameFramworkStackStream<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddBlock() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBoardState() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoardState() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveLevel() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddBlock() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBoardState() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBoardState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoardState() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitialConnectionHandshake(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSerializableNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSerializableProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUpdatedBoardStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveLevel() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLevel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGameFramworkStackStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddBlock() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangeBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBoardState() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBoardState(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoardState() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoardState(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InitialConnectionHandshake(context, request, response); }));
    }
    ~WithRawCallbackMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitialConnectionHandshake(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSerializableNodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSerializableNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSerializableProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSerializableProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetUpdatedBoardStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetUpdatedBoardStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SaveLevel() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveLevel(context, request, response); }));
    }
    ~WithRawCallbackMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetGameFramworkStackStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetGameFramworkStackStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddBlock() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* streamer) {
                       return this->StreamedAddBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Point,::EditorGRPC::EditBlockResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* streamer) {
                       return this->StreamedRemoveBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Point,::EditorGRPC::EditBlockResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangeBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangeBlock() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::BlockEdit, ::EditorGRPC::EditBlockResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::BlockEdit, ::EditorGRPC::EditBlockResult>* streamer) {
                       return this->StreamedChangeBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangeBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangeBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BlockEdit* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangeBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::BlockEdit,::EditorGRPC::EditBlockResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBoardState() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>* streamer) {
                       return this->StreamedGetBoardState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBoardState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Void,::EditorGRPC::BoardDescription>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoardState() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>* streamer) {
                       return this->StreamedSetBoardState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoardState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::BoardDescription,::EditorGRPC::SetBoardDescriptionResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InitialConnectionHandshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InitialConnectionHandshake() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::ClientInfo, ::EditorGRPC::GameSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::ClientInfo, ::EditorGRPC::GameSettings>* streamer) {
                       return this->StreamedInitialConnectionHandshake(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InitialConnectionHandshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InitialConnectionHandshake(::grpc::ServerContext* /*context*/, const ::EditorGRPC::ClientInfo* /*request*/, ::EditorGRPC::GameSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInitialConnectionHandshake(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::ClientInfo,::EditorGRPC::GameSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSerializableNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSerializableNodes() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Void, ::EditorGRPC::SerializablePropertiesNodes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Void, ::EditorGRPC::SerializablePropertiesNodes>* streamer) {
                       return this->StreamedGetSerializableNodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSerializableNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSerializableNodes(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::SerializablePropertiesNodes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSerializableNodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Void,::EditorGRPC::SerializablePropertiesNodes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSerializableProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSerializableProperty() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::SetSerializablePropertyData, ::EditorGRPC::SetSerializablePropertyResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::SetSerializablePropertyData, ::EditorGRPC::SetSerializablePropertyResult>* streamer) {
                       return this->StreamedSetSerializableProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSerializableProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSerializableProperty(::grpc::ServerContext* /*context*/, const ::EditorGRPC::SetSerializablePropertyData* /*request*/, ::EditorGRPC::SetSerializablePropertyResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSerializableProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::SetSerializablePropertyData,::EditorGRPC::SetSerializablePropertyResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveLevel() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::FileSavePath, ::EditorGRPC::FileSaveResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::FileSavePath, ::EditorGRPC::FileSaveResult>* streamer) {
                       return this->StreamedSaveLevel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::EditorGRPC::FileSavePath* /*request*/, ::EditorGRPC::FileSaveResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveLevel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::FileSavePath,::EditorGRPC::FileSaveResult>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddBlock<WithStreamedUnaryMethod_RemoveBlock<WithStreamedUnaryMethod_ChangeBlock<WithStreamedUnaryMethod_GetBoardState<WithStreamedUnaryMethod_SetBoardState<WithStreamedUnaryMethod_InitialConnectionHandshake<WithStreamedUnaryMethod_GetSerializableNodes<WithStreamedUnaryMethod_SetSerializableProperty<WithStreamedUnaryMethod_SaveLevel<Service > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetUpdatedBoardStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetUpdatedBoardStream() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>* streamer) {
                       return this->StreamedGetUpdatedBoardStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetUpdatedBoardStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUpdatedBoardStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::BoardDescription>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetUpdatedBoardStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::EditorGRPC::Void,::EditorGRPC::BoardDescription>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetGameFramworkStackStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetGameFramworkStackStream() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::EditorGRPC::Void, ::EditorGRPC::GameFrameworkLayers>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::EditorGRPC::Void, ::EditorGRPC::GameFrameworkLayers>* streamer) {
                       return this->StreamedGetGameFramworkStackStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetGameFramworkStackStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGameFramworkStackStream(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::grpc::ServerWriter< ::EditorGRPC::GameFrameworkLayers>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetGameFramworkStackStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::EditorGRPC::Void,::EditorGRPC::GameFrameworkLayers>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetUpdatedBoardStream<WithSplitStreamingMethod_GetGameFramworkStackStream<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddBlock<WithStreamedUnaryMethod_RemoveBlock<WithStreamedUnaryMethod_ChangeBlock<WithStreamedUnaryMethod_GetBoardState<WithStreamedUnaryMethod_SetBoardState<WithStreamedUnaryMethod_InitialConnectionHandshake<WithStreamedUnaryMethod_GetSerializableNodes<WithStreamedUnaryMethod_SetSerializableProperty<WithSplitStreamingMethod_GetUpdatedBoardStream<WithStreamedUnaryMethod_SaveLevel<WithSplitStreamingMethod_GetGameFramworkStackStream<Service > > > > > > > > > > > StreamedService;
};

}  // namespace EditorGRPC


#endif  // GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED
