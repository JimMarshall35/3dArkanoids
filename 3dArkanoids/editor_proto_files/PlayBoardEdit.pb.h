// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: editor_proto_files/PlayBoardEdit.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
namespace EditorGRPC {
class BlockEdit;
struct BlockEditDefaultTypeInternal;
extern BlockEditDefaultTypeInternal _BlockEdit_default_instance_;
class BlockType;
struct BlockTypeDefaultTypeInternal;
extern BlockTypeDefaultTypeInternal _BlockType_default_instance_;
class BoardDescription;
struct BoardDescriptionDefaultTypeInternal;
extern BoardDescriptionDefaultTypeInternal _BoardDescription_default_instance_;
class ClientInfo;
struct ClientInfoDefaultTypeInternal;
extern ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;
class EditBlockResult;
struct EditBlockResultDefaultTypeInternal;
extern EditBlockResultDefaultTypeInternal _EditBlockResult_default_instance_;
class GameSettings;
struct GameSettingsDefaultTypeInternal;
extern GameSettingsDefaultTypeInternal _GameSettings_default_instance_;
class Point;
struct PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class SetBoardDescriptionResult;
struct SetBoardDescriptionResultDefaultTypeInternal;
extern SetBoardDescriptionResultDefaultTypeInternal _SetBoardDescriptionResult_default_instance_;
class Void;
struct VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
}  // namespace EditorGRPC
PROTOBUF_NAMESPACE_OPEN
template<> ::EditorGRPC::BlockEdit* Arena::CreateMaybeMessage<::EditorGRPC::BlockEdit>(Arena*);
template<> ::EditorGRPC::BlockType* Arena::CreateMaybeMessage<::EditorGRPC::BlockType>(Arena*);
template<> ::EditorGRPC::BoardDescription* Arena::CreateMaybeMessage<::EditorGRPC::BoardDescription>(Arena*);
template<> ::EditorGRPC::ClientInfo* Arena::CreateMaybeMessage<::EditorGRPC::ClientInfo>(Arena*);
template<> ::EditorGRPC::EditBlockResult* Arena::CreateMaybeMessage<::EditorGRPC::EditBlockResult>(Arena*);
template<> ::EditorGRPC::GameSettings* Arena::CreateMaybeMessage<::EditorGRPC::GameSettings>(Arena*);
template<> ::EditorGRPC::Point* Arena::CreateMaybeMessage<::EditorGRPC::Point>(Arena*);
template<> ::EditorGRPC::SetBoardDescriptionResult* Arena::CreateMaybeMessage<::EditorGRPC::SetBoardDescriptionResult>(Arena*);
template<> ::EditorGRPC::Void* Arena::CreateMaybeMessage<::EditorGRPC::Void>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace EditorGRPC {

enum EditBlockResult_Result : int {
  EditBlockResult_Result_SPACE_EMPTY = 0,
  EditBlockResult_Result_BLOCK_AT_SPACE = 1,
  EditBlockResult_Result_FAILURE_POINT_OUT_OF_BOUNDS = 2,
  EditBlockResult_Result_OTHER_FAILURE = 3,
  EditBlockResult_Result_EditBlockResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  EditBlockResult_Result_EditBlockResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool EditBlockResult_Result_IsValid(int value);
constexpr EditBlockResult_Result EditBlockResult_Result_Result_MIN = EditBlockResult_Result_SPACE_EMPTY;
constexpr EditBlockResult_Result EditBlockResult_Result_Result_MAX = EditBlockResult_Result_OTHER_FAILURE;
constexpr int EditBlockResult_Result_Result_ARRAYSIZE = EditBlockResult_Result_Result_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EditBlockResult_Result_descriptor();
template<typename T>
inline const std::string& EditBlockResult_Result_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EditBlockResult_Result>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EditBlockResult_Result_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EditBlockResult_Result_descriptor(), enum_t_value);
}
inline bool EditBlockResult_Result_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EditBlockResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EditBlockResult_Result>(
    EditBlockResult_Result_descriptor(), name, value);
}
enum SetBoardDescriptionResult_Result : int {
  SetBoardDescriptionResult_Result_SUCCESS = 0,
  SetBoardDescriptionResult_Result_FAILURE_TOO_MANY_BYTES_FOR_WHD = 1,
  SetBoardDescriptionResult_Result_FAILURE_TOO_FEW_BYTES_FOR_WHD = 2,
  SetBoardDescriptionResult_Result_SetBoardDescriptionResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  SetBoardDescriptionResult_Result_SetBoardDescriptionResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool SetBoardDescriptionResult_Result_IsValid(int value);
constexpr SetBoardDescriptionResult_Result SetBoardDescriptionResult_Result_Result_MIN = SetBoardDescriptionResult_Result_SUCCESS;
constexpr SetBoardDescriptionResult_Result SetBoardDescriptionResult_Result_Result_MAX = SetBoardDescriptionResult_Result_FAILURE_TOO_FEW_BYTES_FOR_WHD;
constexpr int SetBoardDescriptionResult_Result_Result_ARRAYSIZE = SetBoardDescriptionResult_Result_Result_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetBoardDescriptionResult_Result_descriptor();
template<typename T>
inline const std::string& SetBoardDescriptionResult_Result_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SetBoardDescriptionResult_Result>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SetBoardDescriptionResult_Result_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SetBoardDescriptionResult_Result_descriptor(), enum_t_value);
}
inline bool SetBoardDescriptionResult_Result_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SetBoardDescriptionResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SetBoardDescriptionResult_Result>(
    SetBoardDescriptionResult_Result_descriptor(), name, value);
}
// ===================================================================

class Point final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.Point) */ {
 public:
  inline Point() : Point(nullptr) {}
  ~Point() override;
  explicit constexpr Point(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point(const Point& from);
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point& operator=(Point&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }
  inline void Swap(Point* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Point& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.Point";
  }
  protected:
  explicit Point(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 z = 3;
  void clear_z();
  int32_t z() const;
  void set_z(int32_t value);
  private:
  int32_t _internal_z() const;
  void _internal_set_z(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.Point)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t x_;
  int32_t y_;
  int32_t z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class BlockEdit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.BlockEdit) */ {
 public:
  inline BlockEdit() : BlockEdit(nullptr) {}
  ~BlockEdit() override;
  explicit constexpr BlockEdit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockEdit(const BlockEdit& from);
  BlockEdit(BlockEdit&& from) noexcept
    : BlockEdit() {
    *this = ::std::move(from);
  }

  inline BlockEdit& operator=(const BlockEdit& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockEdit& operator=(BlockEdit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockEdit& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockEdit* internal_default_instance() {
    return reinterpret_cast<const BlockEdit*>(
               &_BlockEdit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BlockEdit& a, BlockEdit& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockEdit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockEdit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockEdit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BlockEdit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BlockEdit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BlockEdit& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockEdit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.BlockEdit";
  }
  protected:
  explicit BlockEdit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kNewvalFieldNumber = 4,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 z = 3;
  void clear_z();
  int32_t z() const;
  void set_z(int32_t value);
  private:
  int32_t _internal_z() const;
  void _internal_set_z(int32_t value);
  public:

  // int32 newval = 4;
  void clear_newval();
  int32_t newval() const;
  void set_newval(int32_t value);
  private:
  int32_t _internal_newval() const;
  void _internal_set_newval(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.BlockEdit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t x_;
  int32_t y_;
  int32_t z_;
  int32_t newval_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class EditBlockResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.EditBlockResult) */ {
 public:
  inline EditBlockResult() : EditBlockResult(nullptr) {}
  ~EditBlockResult() override;
  explicit constexpr EditBlockResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EditBlockResult(const EditBlockResult& from);
  EditBlockResult(EditBlockResult&& from) noexcept
    : EditBlockResult() {
    *this = ::std::move(from);
  }

  inline EditBlockResult& operator=(const EditBlockResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline EditBlockResult& operator=(EditBlockResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EditBlockResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const EditBlockResult* internal_default_instance() {
    return reinterpret_cast<const EditBlockResult*>(
               &_EditBlockResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EditBlockResult& a, EditBlockResult& b) {
    a.Swap(&b);
  }
  inline void Swap(EditBlockResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EditBlockResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EditBlockResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EditBlockResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EditBlockResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const EditBlockResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EditBlockResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.EditBlockResult";
  }
  protected:
  explicit EditBlockResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EditBlockResult_Result Result;
  static constexpr Result SPACE_EMPTY =
    EditBlockResult_Result_SPACE_EMPTY;
  static constexpr Result BLOCK_AT_SPACE =
    EditBlockResult_Result_BLOCK_AT_SPACE;
  static constexpr Result FAILURE_POINT_OUT_OF_BOUNDS =
    EditBlockResult_Result_FAILURE_POINT_OUT_OF_BOUNDS;
  static constexpr Result OTHER_FAILURE =
    EditBlockResult_Result_OTHER_FAILURE;
  static inline bool Result_IsValid(int value) {
    return EditBlockResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN =
    EditBlockResult_Result_Result_MIN;
  static constexpr Result Result_MAX =
    EditBlockResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE =
    EditBlockResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Result_descriptor() {
    return EditBlockResult_Result_descriptor();
  }
  template<typename T>
  static inline const std::string& Result_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Result>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Result_Name.");
    return EditBlockResult_Result_Name(enum_t_value);
  }
  static inline bool Result_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Result* value) {
    return EditBlockResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMessageFieldNumber = 3,
    kResultFieldNumber = 1,
    kBlockCodeFieldNumber = 2,
    kFinalZValueFieldNumber = 4,
    kFallTimeSecondsFieldNumber = 5,
  };
  // string errorMessage = 3;
  void clear_errormessage();
  const std::string& errormessage() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_errormessage(ArgT0&& arg0, ArgT... args);
  std::string* mutable_errormessage();
  PROTOBUF_NODISCARD std::string* release_errormessage();
  void set_allocated_errormessage(std::string* errormessage);
  private:
  const std::string& _internal_errormessage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_errormessage(const std::string& value);
  std::string* _internal_mutable_errormessage();
  public:

  // .EditorGRPC.EditBlockResult.Result result = 1;
  void clear_result();
  ::EditorGRPC::EditBlockResult_Result result() const;
  void set_result(::EditorGRPC::EditBlockResult_Result value);
  private:
  ::EditorGRPC::EditBlockResult_Result _internal_result() const;
  void _internal_set_result(::EditorGRPC::EditBlockResult_Result value);
  public:

  // int32 blockCode = 2;
  void clear_blockcode();
  int32_t blockcode() const;
  void set_blockcode(int32_t value);
  private:
  int32_t _internal_blockcode() const;
  void _internal_set_blockcode(int32_t value);
  public:

  // int32 finalZValue = 4;
  void clear_finalzvalue();
  int32_t finalzvalue() const;
  void set_finalzvalue(int32_t value);
  private:
  int32_t _internal_finalzvalue() const;
  void _internal_set_finalzvalue(int32_t value);
  public:

  // float fallTimeSeconds = 5;
  void clear_falltimeseconds();
  float falltimeseconds() const;
  void set_falltimeseconds(float value);
  private:
  float _internal_falltimeseconds() const;
  void _internal_set_falltimeseconds(float value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.EditBlockResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr errormessage_;
  int result_;
  int32_t blockcode_;
  int32_t finalzvalue_;
  float falltimeseconds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class SetBoardDescriptionResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.SetBoardDescriptionResult) */ {
 public:
  inline SetBoardDescriptionResult() : SetBoardDescriptionResult(nullptr) {}
  ~SetBoardDescriptionResult() override;
  explicit constexpr SetBoardDescriptionResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetBoardDescriptionResult(const SetBoardDescriptionResult& from);
  SetBoardDescriptionResult(SetBoardDescriptionResult&& from) noexcept
    : SetBoardDescriptionResult() {
    *this = ::std::move(from);
  }

  inline SetBoardDescriptionResult& operator=(const SetBoardDescriptionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBoardDescriptionResult& operator=(SetBoardDescriptionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetBoardDescriptionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBoardDescriptionResult* internal_default_instance() {
    return reinterpret_cast<const SetBoardDescriptionResult*>(
               &_SetBoardDescriptionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetBoardDescriptionResult& a, SetBoardDescriptionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBoardDescriptionResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBoardDescriptionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetBoardDescriptionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetBoardDescriptionResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetBoardDescriptionResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetBoardDescriptionResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBoardDescriptionResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.SetBoardDescriptionResult";
  }
  protected:
  explicit SetBoardDescriptionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SetBoardDescriptionResult_Result Result;
  static constexpr Result SUCCESS =
    SetBoardDescriptionResult_Result_SUCCESS;
  static constexpr Result FAILURE_TOO_MANY_BYTES_FOR_WHD =
    SetBoardDescriptionResult_Result_FAILURE_TOO_MANY_BYTES_FOR_WHD;
  static constexpr Result FAILURE_TOO_FEW_BYTES_FOR_WHD =
    SetBoardDescriptionResult_Result_FAILURE_TOO_FEW_BYTES_FOR_WHD;
  static inline bool Result_IsValid(int value) {
    return SetBoardDescriptionResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN =
    SetBoardDescriptionResult_Result_Result_MIN;
  static constexpr Result Result_MAX =
    SetBoardDescriptionResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE =
    SetBoardDescriptionResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Result_descriptor() {
    return SetBoardDescriptionResult_Result_descriptor();
  }
  template<typename T>
  static inline const std::string& Result_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Result>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Result_Name.");
    return SetBoardDescriptionResult_Result_Name(enum_t_value);
  }
  static inline bool Result_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Result* value) {
    return SetBoardDescriptionResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .EditorGRPC.SetBoardDescriptionResult.Result result = 1;
  void clear_result();
  ::EditorGRPC::SetBoardDescriptionResult_Result result() const;
  void set_result(::EditorGRPC::SetBoardDescriptionResult_Result value);
  private:
  ::EditorGRPC::SetBoardDescriptionResult_Result _internal_result() const;
  void _internal_set_result(::EditorGRPC::SetBoardDescriptionResult_Result value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.SetBoardDescriptionResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class Void final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:EditorGRPC.Void) */ {
 public:
  inline Void() : Void(nullptr) {}
  explicit constexpr Void(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Void(const Void& from);
  Void(Void&& from) noexcept
    : Void() {
    *this = ::std::move(from);
  }

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  inline Void& operator=(Void&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Void& default_instance() {
    return *internal_default_instance();
  }
  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
               &_Void_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Void& a, Void& b) {
    a.Swap(&b);
  }
  inline void Swap(Void* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Void* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Void* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Void>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Void& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Void& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.Void";
  }
  protected:
  explicit Void(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EditorGRPC.Void)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class BoardDescription final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.BoardDescription) */ {
 public:
  inline BoardDescription() : BoardDescription(nullptr) {}
  ~BoardDescription() override;
  explicit constexpr BoardDescription(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BoardDescription(const BoardDescription& from);
  BoardDescription(BoardDescription&& from) noexcept
    : BoardDescription() {
    *this = ::std::move(from);
  }

  inline BoardDescription& operator=(const BoardDescription& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoardDescription& operator=(BoardDescription&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoardDescription& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoardDescription* internal_default_instance() {
    return reinterpret_cast<const BoardDescription*>(
               &_BoardDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BoardDescription& a, BoardDescription& b) {
    a.Swap(&b);
  }
  inline void Swap(BoardDescription* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoardDescription* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoardDescription* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BoardDescription>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BoardDescription& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BoardDescription& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoardDescription* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.BoardDescription";
  }
  protected:
  explicit BoardDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kDepthFieldNumber = 3,
  };
  // bytes data = 4;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // int32 width = 1;
  void clear_width();
  int32_t width() const;
  void set_width(int32_t value);
  private:
  int32_t _internal_width() const;
  void _internal_set_width(int32_t value);
  public:

  // int32 height = 2;
  void clear_height();
  int32_t height() const;
  void set_height(int32_t value);
  private:
  int32_t _internal_height() const;
  void _internal_set_height(int32_t value);
  public:

  // int32 depth = 3;
  void clear_depth();
  int32_t depth() const;
  void set_depth(int32_t value);
  private:
  int32_t _internal_depth() const;
  void _internal_set_depth(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.BoardDescription)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  int32_t width_;
  int32_t height_;
  int32_t depth_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class ClientInfo final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:EditorGRPC.ClientInfo) */ {
 public:
  inline ClientInfo() : ClientInfo(nullptr) {}
  explicit constexpr ClientInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClientInfo(const ClientInfo& from);
  ClientInfo(ClientInfo&& from) noexcept
    : ClientInfo() {
    *this = ::std::move(from);
  }

  inline ClientInfo& operator=(const ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientInfo& operator=(ClientInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientInfo* internal_default_instance() {
    return reinterpret_cast<const ClientInfo*>(
               &_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ClientInfo& a, ClientInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClientInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ClientInfo& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ClientInfo& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.ClientInfo";
  }
  protected:
  explicit ClientInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EditorGRPC.ClientInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class BlockType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.BlockType) */ {
 public:
  inline BlockType() : BlockType(nullptr) {}
  ~BlockType() override;
  explicit constexpr BlockType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockType(const BlockType& from);
  BlockType(BlockType&& from) noexcept
    : BlockType() {
    *this = ::std::move(from);
  }

  inline BlockType& operator=(const BlockType& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockType& operator=(BlockType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockType& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockType* internal_default_instance() {
    return reinterpret_cast<const BlockType*>(
               &_BlockType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BlockType& a, BlockType& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BlockType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BlockType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BlockType& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.BlockType";
  }
  protected:
  explicit BlockType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameEngineCodeFieldNumber = 1,
    kRedFieldNumber = 2,
    kGreenFieldNumber = 3,
    kBlueFieldNumber = 4,
  };
  // int32 gameEngineCode = 1;
  void clear_gameenginecode();
  int32_t gameenginecode() const;
  void set_gameenginecode(int32_t value);
  private:
  int32_t _internal_gameenginecode() const;
  void _internal_set_gameenginecode(int32_t value);
  public:

  // float red = 2;
  void clear_red();
  float red() const;
  void set_red(float value);
  private:
  float _internal_red() const;
  void _internal_set_red(float value);
  public:

  // float green = 3;
  void clear_green();
  float green() const;
  void set_green(float value);
  private:
  float _internal_green() const;
  void _internal_set_green(float value);
  public:

  // float blue = 4;
  void clear_blue();
  float blue() const;
  void set_blue(float value);
  private:
  float _internal_blue() const;
  void _internal_set_blue(float value);
  public:

  // @@protoc_insertion_point(class_scope:EditorGRPC.BlockType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t gameenginecode_;
  float red_;
  float green_;
  float blue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// -------------------------------------------------------------------

class GameSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EditorGRPC.GameSettings) */ {
 public:
  inline GameSettings() : GameSettings(nullptr) {}
  ~GameSettings() override;
  explicit constexpr GameSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GameSettings(const GameSettings& from);
  GameSettings(GameSettings&& from) noexcept
    : GameSettings() {
    *this = ::std::move(from);
  }

  inline GameSettings& operator=(const GameSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameSettings& operator=(GameSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameSettings* internal_default_instance() {
    return reinterpret_cast<const GameSettings*>(
               &_GameSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GameSettings& a, GameSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(GameSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GameSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GameSettings& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EditorGRPC.GameSettings";
  }
  protected:
  explicit GameSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPossibleBlocksFieldNumber = 1,
  };
  // repeated .EditorGRPC.BlockType possibleBlocks = 1;
  int possibleblocks_size() const;
  private:
  int _internal_possibleblocks_size() const;
  public:
  void clear_possibleblocks();
  ::EditorGRPC::BlockType* mutable_possibleblocks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::EditorGRPC::BlockType >*
      mutable_possibleblocks();
  private:
  const ::EditorGRPC::BlockType& _internal_possibleblocks(int index) const;
  ::EditorGRPC::BlockType* _internal_add_possibleblocks();
  public:
  const ::EditorGRPC::BlockType& possibleblocks(int index) const;
  ::EditorGRPC::BlockType* add_possibleblocks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::EditorGRPC::BlockType >&
      possibleblocks() const;

  // @@protoc_insertion_point(class_scope:EditorGRPC.GameSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::EditorGRPC::BlockType > possibleblocks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point

// int32 x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline int32_t Point::_internal_x() const {
  return x_;
}
inline int32_t Point::x() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.Point.x)
  return _internal_x();
}
inline void Point::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void Point::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.Point.x)
}

// int32 y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline int32_t Point::_internal_y() const {
  return y_;
}
inline int32_t Point::y() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.Point.y)
  return _internal_y();
}
inline void Point::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void Point::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.Point.y)
}

// int32 z = 3;
inline void Point::clear_z() {
  z_ = 0;
}
inline int32_t Point::_internal_z() const {
  return z_;
}
inline int32_t Point::z() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.Point.z)
  return _internal_z();
}
inline void Point::_internal_set_z(int32_t value) {
  
  z_ = value;
}
inline void Point::set_z(int32_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.Point.z)
}

// -------------------------------------------------------------------

// BlockEdit

// int32 x = 1;
inline void BlockEdit::clear_x() {
  x_ = 0;
}
inline int32_t BlockEdit::_internal_x() const {
  return x_;
}
inline int32_t BlockEdit::x() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockEdit.x)
  return _internal_x();
}
inline void BlockEdit::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void BlockEdit::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockEdit.x)
}

// int32 y = 2;
inline void BlockEdit::clear_y() {
  y_ = 0;
}
inline int32_t BlockEdit::_internal_y() const {
  return y_;
}
inline int32_t BlockEdit::y() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockEdit.y)
  return _internal_y();
}
inline void BlockEdit::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void BlockEdit::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockEdit.y)
}

// int32 z = 3;
inline void BlockEdit::clear_z() {
  z_ = 0;
}
inline int32_t BlockEdit::_internal_z() const {
  return z_;
}
inline int32_t BlockEdit::z() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockEdit.z)
  return _internal_z();
}
inline void BlockEdit::_internal_set_z(int32_t value) {
  
  z_ = value;
}
inline void BlockEdit::set_z(int32_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockEdit.z)
}

// int32 newval = 4;
inline void BlockEdit::clear_newval() {
  newval_ = 0;
}
inline int32_t BlockEdit::_internal_newval() const {
  return newval_;
}
inline int32_t BlockEdit::newval() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockEdit.newval)
  return _internal_newval();
}
inline void BlockEdit::_internal_set_newval(int32_t value) {
  
  newval_ = value;
}
inline void BlockEdit::set_newval(int32_t value) {
  _internal_set_newval(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockEdit.newval)
}

// -------------------------------------------------------------------

// EditBlockResult

// .EditorGRPC.EditBlockResult.Result result = 1;
inline void EditBlockResult::clear_result() {
  result_ = 0;
}
inline ::EditorGRPC::EditBlockResult_Result EditBlockResult::_internal_result() const {
  return static_cast< ::EditorGRPC::EditBlockResult_Result >(result_);
}
inline ::EditorGRPC::EditBlockResult_Result EditBlockResult::result() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.EditBlockResult.result)
  return _internal_result();
}
inline void EditBlockResult::_internal_set_result(::EditorGRPC::EditBlockResult_Result value) {
  
  result_ = value;
}
inline void EditBlockResult::set_result(::EditorGRPC::EditBlockResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.EditBlockResult.result)
}

// int32 blockCode = 2;
inline void EditBlockResult::clear_blockcode() {
  blockcode_ = 0;
}
inline int32_t EditBlockResult::_internal_blockcode() const {
  return blockcode_;
}
inline int32_t EditBlockResult::blockcode() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.EditBlockResult.blockCode)
  return _internal_blockcode();
}
inline void EditBlockResult::_internal_set_blockcode(int32_t value) {
  
  blockcode_ = value;
}
inline void EditBlockResult::set_blockcode(int32_t value) {
  _internal_set_blockcode(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.EditBlockResult.blockCode)
}

// string errorMessage = 3;
inline void EditBlockResult::clear_errormessage() {
  errormessage_.ClearToEmpty();
}
inline const std::string& EditBlockResult::errormessage() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.EditBlockResult.errorMessage)
  return _internal_errormessage();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void EditBlockResult::set_errormessage(ArgT0&& arg0, ArgT... args) {
 
 errormessage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:EditorGRPC.EditBlockResult.errorMessage)
}
inline std::string* EditBlockResult::mutable_errormessage() {
  std::string* _s = _internal_mutable_errormessage();
  // @@protoc_insertion_point(field_mutable:EditorGRPC.EditBlockResult.errorMessage)
  return _s;
}
inline const std::string& EditBlockResult::_internal_errormessage() const {
  return errormessage_.Get();
}
inline void EditBlockResult::_internal_set_errormessage(const std::string& value) {
  
  errormessage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* EditBlockResult::_internal_mutable_errormessage() {
  
  return errormessage_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* EditBlockResult::release_errormessage() {
  // @@protoc_insertion_point(field_release:EditorGRPC.EditBlockResult.errorMessage)
  return errormessage_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void EditBlockResult::set_allocated_errormessage(std::string* errormessage) {
  if (errormessage != nullptr) {
    
  } else {
    
  }
  errormessage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), errormessage,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (errormessage_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    errormessage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:EditorGRPC.EditBlockResult.errorMessage)
}

// int32 finalZValue = 4;
inline void EditBlockResult::clear_finalzvalue() {
  finalzvalue_ = 0;
}
inline int32_t EditBlockResult::_internal_finalzvalue() const {
  return finalzvalue_;
}
inline int32_t EditBlockResult::finalzvalue() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.EditBlockResult.finalZValue)
  return _internal_finalzvalue();
}
inline void EditBlockResult::_internal_set_finalzvalue(int32_t value) {
  
  finalzvalue_ = value;
}
inline void EditBlockResult::set_finalzvalue(int32_t value) {
  _internal_set_finalzvalue(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.EditBlockResult.finalZValue)
}

// float fallTimeSeconds = 5;
inline void EditBlockResult::clear_falltimeseconds() {
  falltimeseconds_ = 0;
}
inline float EditBlockResult::_internal_falltimeseconds() const {
  return falltimeseconds_;
}
inline float EditBlockResult::falltimeseconds() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.EditBlockResult.fallTimeSeconds)
  return _internal_falltimeseconds();
}
inline void EditBlockResult::_internal_set_falltimeseconds(float value) {
  
  falltimeseconds_ = value;
}
inline void EditBlockResult::set_falltimeseconds(float value) {
  _internal_set_falltimeseconds(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.EditBlockResult.fallTimeSeconds)
}

// -------------------------------------------------------------------

// SetBoardDescriptionResult

// .EditorGRPC.SetBoardDescriptionResult.Result result = 1;
inline void SetBoardDescriptionResult::clear_result() {
  result_ = 0;
}
inline ::EditorGRPC::SetBoardDescriptionResult_Result SetBoardDescriptionResult::_internal_result() const {
  return static_cast< ::EditorGRPC::SetBoardDescriptionResult_Result >(result_);
}
inline ::EditorGRPC::SetBoardDescriptionResult_Result SetBoardDescriptionResult::result() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.SetBoardDescriptionResult.result)
  return _internal_result();
}
inline void SetBoardDescriptionResult::_internal_set_result(::EditorGRPC::SetBoardDescriptionResult_Result value) {
  
  result_ = value;
}
inline void SetBoardDescriptionResult::set_result(::EditorGRPC::SetBoardDescriptionResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.SetBoardDescriptionResult.result)
}

// -------------------------------------------------------------------

// Void

// -------------------------------------------------------------------

// BoardDescription

// int32 width = 1;
inline void BoardDescription::clear_width() {
  width_ = 0;
}
inline int32_t BoardDescription::_internal_width() const {
  return width_;
}
inline int32_t BoardDescription::width() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BoardDescription.width)
  return _internal_width();
}
inline void BoardDescription::_internal_set_width(int32_t value) {
  
  width_ = value;
}
inline void BoardDescription::set_width(int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BoardDescription.width)
}

// int32 height = 2;
inline void BoardDescription::clear_height() {
  height_ = 0;
}
inline int32_t BoardDescription::_internal_height() const {
  return height_;
}
inline int32_t BoardDescription::height() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BoardDescription.height)
  return _internal_height();
}
inline void BoardDescription::_internal_set_height(int32_t value) {
  
  height_ = value;
}
inline void BoardDescription::set_height(int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BoardDescription.height)
}

// int32 depth = 3;
inline void BoardDescription::clear_depth() {
  depth_ = 0;
}
inline int32_t BoardDescription::_internal_depth() const {
  return depth_;
}
inline int32_t BoardDescription::depth() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BoardDescription.depth)
  return _internal_depth();
}
inline void BoardDescription::_internal_set_depth(int32_t value) {
  
  depth_ = value;
}
inline void BoardDescription::set_depth(int32_t value) {
  _internal_set_depth(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BoardDescription.depth)
}

// bytes data = 4;
inline void BoardDescription::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& BoardDescription::data() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BoardDescription.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BoardDescription::set_data(ArgT0&& arg0, ArgT... args) {
 
 data_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:EditorGRPC.BoardDescription.data)
}
inline std::string* BoardDescription::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:EditorGRPC.BoardDescription.data)
  return _s;
}
inline const std::string& BoardDescription::_internal_data() const {
  return data_.Get();
}
inline void BoardDescription::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BoardDescription::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BoardDescription::release_data() {
  // @@protoc_insertion_point(field_release:EditorGRPC.BoardDescription.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BoardDescription::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (data_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:EditorGRPC.BoardDescription.data)
}

// -------------------------------------------------------------------

// ClientInfo

// -------------------------------------------------------------------

// BlockType

// int32 gameEngineCode = 1;
inline void BlockType::clear_gameenginecode() {
  gameenginecode_ = 0;
}
inline int32_t BlockType::_internal_gameenginecode() const {
  return gameenginecode_;
}
inline int32_t BlockType::gameenginecode() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockType.gameEngineCode)
  return _internal_gameenginecode();
}
inline void BlockType::_internal_set_gameenginecode(int32_t value) {
  
  gameenginecode_ = value;
}
inline void BlockType::set_gameenginecode(int32_t value) {
  _internal_set_gameenginecode(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockType.gameEngineCode)
}

// float red = 2;
inline void BlockType::clear_red() {
  red_ = 0;
}
inline float BlockType::_internal_red() const {
  return red_;
}
inline float BlockType::red() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockType.red)
  return _internal_red();
}
inline void BlockType::_internal_set_red(float value) {
  
  red_ = value;
}
inline void BlockType::set_red(float value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockType.red)
}

// float green = 3;
inline void BlockType::clear_green() {
  green_ = 0;
}
inline float BlockType::_internal_green() const {
  return green_;
}
inline float BlockType::green() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockType.green)
  return _internal_green();
}
inline void BlockType::_internal_set_green(float value) {
  
  green_ = value;
}
inline void BlockType::set_green(float value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockType.green)
}

// float blue = 4;
inline void BlockType::clear_blue() {
  blue_ = 0;
}
inline float BlockType::_internal_blue() const {
  return blue_;
}
inline float BlockType::blue() const {
  // @@protoc_insertion_point(field_get:EditorGRPC.BlockType.blue)
  return _internal_blue();
}
inline void BlockType::_internal_set_blue(float value) {
  
  blue_ = value;
}
inline void BlockType::set_blue(float value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:EditorGRPC.BlockType.blue)
}

// -------------------------------------------------------------------

// GameSettings

// repeated .EditorGRPC.BlockType possibleBlocks = 1;
inline int GameSettings::_internal_possibleblocks_size() const {
  return possibleblocks_.size();
}
inline int GameSettings::possibleblocks_size() const {
  return _internal_possibleblocks_size();
}
inline void GameSettings::clear_possibleblocks() {
  possibleblocks_.Clear();
}
inline ::EditorGRPC::BlockType* GameSettings::mutable_possibleblocks(int index) {
  // @@protoc_insertion_point(field_mutable:EditorGRPC.GameSettings.possibleBlocks)
  return possibleblocks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::EditorGRPC::BlockType >*
GameSettings::mutable_possibleblocks() {
  // @@protoc_insertion_point(field_mutable_list:EditorGRPC.GameSettings.possibleBlocks)
  return &possibleblocks_;
}
inline const ::EditorGRPC::BlockType& GameSettings::_internal_possibleblocks(int index) const {
  return possibleblocks_.Get(index);
}
inline const ::EditorGRPC::BlockType& GameSettings::possibleblocks(int index) const {
  // @@protoc_insertion_point(field_get:EditorGRPC.GameSettings.possibleBlocks)
  return _internal_possibleblocks(index);
}
inline ::EditorGRPC::BlockType* GameSettings::_internal_add_possibleblocks() {
  return possibleblocks_.Add();
}
inline ::EditorGRPC::BlockType* GameSettings::add_possibleblocks() {
  ::EditorGRPC::BlockType* _add = _internal_add_possibleblocks();
  // @@protoc_insertion_point(field_add:EditorGRPC.GameSettings.possibleBlocks)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::EditorGRPC::BlockType >&
GameSettings::possibleblocks() const {
  // @@protoc_insertion_point(field_list:EditorGRPC.GameSettings.possibleBlocks)
  return possibleblocks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace EditorGRPC

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EditorGRPC::EditBlockResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EditorGRPC::EditBlockResult_Result>() {
  return ::EditorGRPC::EditBlockResult_Result_descriptor();
}
template <> struct is_proto_enum< ::EditorGRPC::SetBoardDescriptionResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EditorGRPC::SetBoardDescriptionResult_Result>() {
  return ::EditorGRPC::SetBoardDescriptionResult_Result_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto
