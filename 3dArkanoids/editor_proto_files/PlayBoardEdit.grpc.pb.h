// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: editor_proto_files/PlayBoardEdit.proto
#ifndef GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED
#define GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED

#include "editor_proto_files/PlayBoardEdit.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace EditorGRPC {

class PlayBoardEdit final {
 public:
  static constexpr char const* service_full_name() {
    return "EditorGRPC.PlayBoardEdit";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> AsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(AsyncAddBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> PrepareAsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(PrepareAsyncAddBlockRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> AsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(AsyncRemoveBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>> PrepareAsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>>(PrepareAsyncRemoveBlockRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::BoardDescription* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>> AsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>>(AsyncGetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>> PrepareAsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetBoardStateRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::EditorGRPC::SetBoardDescriptionResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>> AsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>>(AsyncSetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>> PrepareAsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>>(PrepareAsyncSetBoardStateRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* AsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* PrepareAsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* AsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::EditBlockResult>* PrepareAsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>* AsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::BoardDescription>* PrepareAsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>* AsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::EditorGRPC::SetBoardDescriptionResult>* PrepareAsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> AsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(AsyncAddBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> PrepareAsyncAddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(PrepareAsyncAddBlockRaw(context, request, cq));
    }
    ::grpc::Status RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::EditorGRPC::EditBlockResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> AsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(AsyncRemoveBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>> PrepareAsyncRemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>>(PrepareAsyncRemoveBlockRaw(context, request, cq));
    }
    ::grpc::Status GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::EditorGRPC::BoardDescription* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>> AsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>>(AsyncGetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>> PrepareAsyncGetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>>(PrepareAsyncGetBoardStateRaw(context, request, cq));
    }
    ::grpc::Status SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::EditorGRPC::SetBoardDescriptionResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>> AsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>>(AsyncSetBoardStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>> PrepareAsyncSetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>>(PrepareAsyncSetBoardStateRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) override;
      void AddBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, std::function<void(::grpc::Status)>) override;
      void RemoveBlock(::grpc::ClientContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, std::function<void(::grpc::Status)>) override;
      void GetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, std::function<void(::grpc::Status)>) override;
      void SetBoardState(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* AsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* PrepareAsyncAddBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* AsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::EditBlockResult>* PrepareAsyncRemoveBlockRaw(::grpc::ClientContext* context, const ::EditorGRPC::Point& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>* AsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::BoardDescription>* PrepareAsyncGetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::Void& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>* AsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::EditorGRPC::SetBoardDescriptionResult>* PrepareAsyncSetBoardStateRaw(::grpc::ClientContext* context, const ::EditorGRPC::BoardDescription& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBoardState_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoardState_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddBlock(::grpc::ServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response);
    virtual ::grpc::Status RemoveBlock(::grpc::ServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response);
    virtual ::grpc::Status GetBoardState(::grpc::ServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response);
    virtual ::grpc::Status SetBoardState(::grpc::ServerContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddBlock() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBlock(::grpc::ServerContext* context, ::EditorGRPC::Point* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::EditBlockResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBlock(::grpc::ServerContext* context, ::EditorGRPC::Point* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::EditBlockResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBoardState() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBoardState(::grpc::ServerContext* context, ::EditorGRPC::Void* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::BoardDescription>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoardState() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardState(::grpc::ServerContext* context, ::EditorGRPC::BoardDescription* request, ::grpc::ServerAsyncResponseWriter< ::EditorGRPC::SetBoardDescriptionResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddBlock<WithAsyncMethod_RemoveBlock<WithAsyncMethod_GetBoardState<WithAsyncMethod_SetBoardState<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddBlock() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response) { return this->AddBlock(context, request, response); }));}
    void SetMessageAllocatorFor_AddBlock(
        ::grpc::MessageAllocator< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Point* request, ::EditorGRPC::EditBlockResult* response) { return this->RemoveBlock(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveBlock(
        ::grpc::MessageAllocator< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBoardState() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::Void* request, ::EditorGRPC::BoardDescription* response) { return this->GetBoardState(context, request, response); }));}
    void SetMessageAllocatorFor_GetBoardState(
        ::grpc::MessageAllocator< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoardState() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::EditorGRPC::BoardDescription* request, ::EditorGRPC::SetBoardDescriptionResult* response) { return this->SetBoardState(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoardState(
        ::grpc::MessageAllocator< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddBlock<WithCallbackMethod_RemoveBlock<WithCallbackMethod_GetBoardState<WithCallbackMethod_SetBoardState<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddBlock() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBoardState() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoardState() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddBlock() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBoardState() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBoardState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoardState() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddBlock() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBoardState() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBoardState(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoardState() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoardState(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddBlock() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* streamer) {
                       return this->StreamedAddBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Point,::EditorGRPC::EditBlockResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveBlock() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Point, ::EditorGRPC::EditBlockResult>* streamer) {
                       return this->StreamedRemoveBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveBlock(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Point* /*request*/, ::EditorGRPC::EditBlockResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Point,::EditorGRPC::EditBlockResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBoardState() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::Void, ::EditorGRPC::BoardDescription>* streamer) {
                       return this->StreamedGetBoardState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::Void* /*request*/, ::EditorGRPC::BoardDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBoardState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::Void,::EditorGRPC::BoardDescription>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoardState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoardState() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::EditorGRPC::BoardDescription, ::EditorGRPC::SetBoardDescriptionResult>* streamer) {
                       return this->StreamedSetBoardState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoardState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoardState(::grpc::ServerContext* /*context*/, const ::EditorGRPC::BoardDescription* /*request*/, ::EditorGRPC::SetBoardDescriptionResult* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoardState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::EditorGRPC::BoardDescription,::EditorGRPC::SetBoardDescriptionResult>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddBlock<WithStreamedUnaryMethod_RemoveBlock<WithStreamedUnaryMethod_GetBoardState<WithStreamedUnaryMethod_SetBoardState<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddBlock<WithStreamedUnaryMethod_RemoveBlock<WithStreamedUnaryMethod_GetBoardState<WithStreamedUnaryMethod_SetBoardState<Service > > > > StreamedService;
};

}  // namespace EditorGRPC


#endif  // GRPC_editor_5fproto_5ffiles_2fPlayBoardEdit_2eproto__INCLUDED
